#!/bin/env ruby

require 'seapig-client'

STDOUT.sync = true

class Producer

	class << self
		attr_reader :patterns
	end

	def self.all
		@producers ||= ObjectSpace.each_object(Class).select { |klass| klass < Producer }
	end

end

($LOAD_PATH+['./lib']).each { |load_path|
	Dir[load_path+'/seapigs/*.rb'].each { |f| require f }
}




EM.run {

	server = SeapigServer.new(ARGV[0], name: 'worker')

	Producer.all.each { |producer|
		producer.patterns.each { |pattern|
			object = server.master(pattern)
			object.onproduce { |child|
				start = Time.new
				print 'Sent  %-30s  '%[child.object_id]
				data, version = producer.produce(child.object_id)
				child.reset.set(data).send(version)
				puts 'in %5.2fs - %s'%[(Time.new-start).to_f,version.inspect]
			}
		}
	}

}

