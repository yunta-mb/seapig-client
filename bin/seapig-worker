#!/bin/env ruby

require 'seapig-client'


class Producer

	class << self
		attr_reader :patterns
	end
	
	def self.all
		@producers ||= ObjectSpace.each_object(Class).select { |klass| klass < Producer }
	end
	
end

($LOAD_PATH+['./lib']).each { |load_path|
	Dir[load_path+'/seapigs/*.rb'].each { |f| require f }
}




EM.run {

	server = SeapigServer.new(ARGV[0], name: 'worker')

	Producer.all.each { |producer|
		producer.patterns.each { |pattern|
			object = server.master(pattern)
			object.onproduce { |object_id|
				start = Time.new
				puts 'Generating '+object_id
				data,version = producer.produce(object_id)
				object.set(data, version)
				puts 'Generated %25s in %5.2fs'%[object_id, (Time.new-start).to_f]
			}
		}
	}

}

